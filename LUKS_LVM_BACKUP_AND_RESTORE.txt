#################################################################################################################
## Backup LUKS_LVM metadata configuration (OPTIONAL)
#
MAIN_CRYPT_LABEL="rcrypt"
SECOND_CRYPT_LABEL="dcrypt"
LVM_DECRYPTED_NAME="lvm_decrypted"
VG_NAME="vg"
#
MAIN_CRYPT_DEV="/dev/disk/by-label/${MAIN_CRYPT_LABEL}"
SECOND_CRYPT_DEV="/dev/disk/by-label/${SECOND_CRYPT_LABEL}"
LVM_DEVICE="/dev/mapper/${LVM_DECRYPTED_NAME}"
#
## backup PARTUUID and UUIDs of LVM and encrypted partitions (OPTIONAL)
echo "Backup PARTUUIDs and UUID for LUKS/LVM..."
blkid -s PARTUUID -o value "${MAIN_CRYPT_DEV}" > "${MAIN_CRYPT_LABEL}_PARTUUID.txt"
blkid -s PARTUUID -o value "${SECOND_CRYPT_DEV}" > "${SECOND_CRYPT_LABEL}_PARTUUID.txt"
blkid -s UUID -o value "${MAIN_CRYPT_DEV}" > "${MAIN_CRYPT_LABEL}_UUID.txt"
blkid -s UUID -o value "${SECOND_CRYPT_DEV}" > "${SECOND_CRYPT_LABEL}_UUID.txt"
blkid -s UUID -o value "${LVM_DEVICE}" > "${LVM_DECRYPTED_NAME}_UUID.txt"
chown 1000:1000 *.txt
#
################################################################################################################
## backup luks headers (OPTIONAL)
#
echo "Backup LUKS header for main encrypted partition..."
cryptsetup luksHeaderBackup "${MAIN_CRYPT_DEV}" --header-backup-file "${MAIN_CRYPT_LABEL}_header_backup"
gpg --symmetric --output "${MAIN_CRYPT_LABEL}_header_backup.gpg" "${MAIN_CRYPT_LABEL}_header_backup"
shred --iterations=3 --zero --remove=wipesync "${MAIN_CRYPT_LABEL}_header_backup"
#
echo "Backup LUKS header for second encrypted partition..."
cryptsetup luksHeaderBackup "${SECOND_CRYPT_DEV}" --header-backup-file "${SECOND_CRYPT_LABEL}_header_backup"
gpg --symmetric --output "${SECOND_CRYPT_LABEL}_header_backup.gpg" "${SECOND_CRYPT_LABEL}_header_backup"
shred --iterations=3 --zero --remove=wipesync "${SECOND_CRYPT_LABEL}_header_backup"
chown 1000:1000 *.gpg
#
## backup volume group metadata (OPTIONAL)
#
echo "Backup volume group metadata..."
vgcfgbackup -f "${VG_NAME}_METADATA.backup" "${VG_NAME}"
chown 1000:1000 "${VG_NAME}_METADATA.backup"
#
################################################################################################################
# RESTORE LUKS_LVM metadata configuration (OPTIONAL)
STEPS
1) LUKS/LVM Partition UUID check/change with gdisk
2) create new cryptsetup encryption on LVM partition
#
Creation command (exmaple which needs to be adjusted to current needs):
cryptsetup --debug --type luks2 -v --verify-passphrase --cipher aes-xts-plain64 --key-size 512 --key-slot 0  --key-description "Basic key" --hash sha256 --iter-time 10654 --pbkdf argon2id  --pbkdf-memory 524288 --pbkdf-parallel 4 --use-random --label test-locked --timeout 30 --integrity  hmac-sha256 --uuid "12345678-1234-1234-1234-123456789abc" luksFormat /dev/loop0

Luks restore headers
cryptsetup luksHeaderRestore "${MAIN_CRYPT_DEV}" --header-backup-file "${MAIN_CRYPT_LABEL}_header_backup"

3) Open luks encrypted volume
crypsetup open "${MAIN_CRYPT_DEV}" LVM_DECRYPTED_NAME

4) recreation of LVM on decrypted luks
pvcreate --uuid "${UUID}" --norestorefile "${LVM_DEVICE}"

5) restore volume group backup
vgcfgrestore -f vg_backup "${VG_NAME}"
#
################################################################################################################
